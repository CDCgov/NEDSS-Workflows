name: Update helm chart with new container
on:
  workflow_call:
    inputs:
      values_file_with_path:
        description: "Relative path Helm chart values file, including the file itself (Ex. elasticsearch/values-dev.yaml)"
        required: true
        type: string
      new_image_tag:
        description: "Image tag to add to helm chart"
        required: true
        type: string
      microservice_name:
        description: "Name of microservice corresponding to a container in ECR."
        required: true
        type: string
    secrets:
      GIT_USER_EMAIL:
        description: "Secret named GIT_USER_EMAIL for the CI user email."
        required: true
      GIT_USER_NAME:
        description: "Secret named ECR_REPO_BASE_NAME for the CI user name."
        required: true
      HELM_TOKEN:
        description: "Secret named HELM_TOKEN to access helm chart repository"
        required: true

# If update occurs from the trunk (main branch only), directly push otherwise create a PR
# Only allows calls from within CDCgov organization
jobs:  
  update-helm-chart:
    if: startsWith( github.repository, 'CDCgov' )
    name: Update Helm Charts
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write
      pull-requests: write

    steps:
    - name: Checkout helm repository
      uses: actions/checkout@v4
      with:
        repository: CDCgov/NEDSS-Helm
        token: ${{secrets.HELM_TOKEN}} 
    
    - name: Set env variable
      run: echo "ran_push_to_main=false" >> $GITHUB_ENV     

    - name: Modify helm chart image
      run: |
        awk -v NEW_TAG="${{ inputs.new_image_tag}}" '/^ *image:/ {p=1} p && /^ *tag:/ {sub(/:.*/, ": "NEW_TAG); p=0} {print}' ${{ inputs.values_file_with_path}} > newfile.yaml
        mv newfile.yaml ${{ inputs.values_file_with_path}}

    # If request is coming from the main trunk or is intended for dev environment
    - name: Commit and push changes to helm repository directly to main
      if: ${{ endsWith( github.ref, 'main') == true && contains(inputs.new_image_tag, 'SNAPSHOT') == true }}
      run: |
        echo ${{github.ref}}
        echo ${{ inputs.new_image_tag}}   
        git config --global user.name ${{ secrets.GIT_USER_NAME }}
        git config --global user.email  ${{ secrets.GIT_USER_EMAIL }}
        git remote set-url origin https://x-access-token:${{ secrets.HELM_TOKEN }}@github.com/CDCgov/NEDSS-Helm.git
        git add -A
        git commit -m "updating helm chart ${{ inputs.values_file_with_path}} with image tag ${{ inputs.new_image_tag}}"
        git push origin main --force
        
        echo "ran_push_to_main=true" >> $GITHUB_ENV

     # If request is NOT coming from the main trunk AND is NOT intended for dev environment
    - name: Commit and pull request to helm repository into main
      if: ${{ contains(env.ran_push_to_main, true) == false }}
      run: |
        git config --global user.name ${{ secrets.GIT_USER_NAME }}
        git config --global user.email  ${{ secrets.GIT_USER_EMAIL }}
        git checkout -b helm-update-${{inputs.microservice_name}}-${{ inputs.new_image_tag}}
        git add -A
        git commit -m "updating helm chart ${{ inputs.values_file_with_path}} with image tag ${{ inputs.new_image_tag}}"
        git push --set-upstream origin helm-update-${{inputs.microservice_name}}-${{ inputs.new_image_tag}}

        gh pr create -B main -H helm-update-${{inputs.microservice_name}}-${{ inputs.new_image_tag}} --title 'Merge helm-update-${{inputs.microservice_name}}-${{ inputs.new_image_tag}} into main' --body 'Created by Github action in ${{github.ref}}'
      env:
        GITHUB_TOKEN: ${{secrets.HELM_TOKEN}}