name: Build and store a microservice container
on:
  workflow_call:
    inputs:
      # container build inputs
      image_name:
        description: "Name of container in ECR."
        required: true
        type: string
      dockerfile_relative_path:
        description: "Relative path to dockerfile being built (use '-f' docker argument if the dockerfile referenced from the root directory)."
        required: true
        type: string
      nbs6_version:
        description: "NBS6 Version. This will be used to pull NBS ZIP from S3 Bucker in Shared Account and Tag Docker Image"
        required: true
        type: string
      github_zip_file_name:
          description: "Full zip file name and file format to be downloaded from latest Release Assets in Modernization Repository"
          required: true
          type: string
      user_guide_doc_name:
        description: "Full user guide name with file format to be configured in NBS6 container"
        required: true
        type: string
      release_tag:
        description: "Release tag from which zip file will be downloaded from. Default is always latest"
        required: true
        type: string
        default: latest

    secrets:
      CLASSIC_ZIP_S3_BUCKET:
        description: "Secret named CLASSIC_ZIP_S3_BUCKET providing S3 Bucket for NBS6 ZIP File."
        required: true

        
jobs:
  build:
    name: Build and Push Container Docker Repository
    runs-on: windows-2019
    defaults:
      run:
        shell: pwsh

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    # New comment
    permissions:
      id-token: write
      contents: read
      security-events: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.1


    - name: Configure Environment Variables
      env:
        RELEASE_TAG: ${{ inputs.release_tag }}
      run: |     
        $github_api_Url = "https://api.github.com/repos/$env:GITHUB_REPOSITORY/releases/$env:RELEASE_TAG"
        "github_api_Url=$github_api_Url" | Out-File -FilePath  $env:GITHUB_ENV -Encoding utf8 -Append
        

    - name: Pull NBS6 ${{ inputs.nbs6_version }} Zip File
      env:
        IMAGE_TAG: "${{ inputs.nbs6_version }}"
        CLASSIC_ZIP_S3_BUCKET: ${{ secrets.CLASSIC_ZIP_S3_BUCKET }}
        DOCKERFILE_PATH: "${{ inputs.dockerfile_relative_path}}"
      run: |
        $s3_pull_command = "aws s3 cp s3://${env:CLASSIC_ZIP_S3_BUCKET}/wildfly-10.0.0.Final-${env:IMAGE_TAG}.zip ${env:DOCKERFILE_PATH}"
        Invoke-Expression $s3_pull_command


    - name: Build and Tag ${{ inputs.image_name }} Image
      id: build-image
      env:
        QUAY_REGISTRY: ${{secrets.QUAY_ORGANIZATION}}
        QUAY_REPOSITORY: ${{ secrets.QUAY_REPO_BASE_NAME }}/${{ inputs.image_name }}
        IMAGE_TAG: "${{ inputs.nbs6_version }}"
        DOCKERFILE_PATH: "${{ inputs.dockerfile_relative_path}}"
        USER_GUIDE_DOC_NAME: "${{ inputs.USER_GUIDE_DOC_NAME}}"
        GITHUB_ZIP_FILE_NAME: "${{ inputs.github_zip_file_name }}"
      run: |
        # Build a docker container
        echo "Building image.."

        $full_s3_zip_name = "wildfly-10.0.0.Final-$env:IMAGE_TAG"
        $docker_build_command = "docker build --build-arg S3_ZIP_NAME=$full_s3_zip_name --build-arg USER_GUIDE_NAME='${env:USER_GUIDE_DOC_NAME}' --build-arg GITHUB_API_URL='${env:github_api_Url}' --build-arg GITHUB_ZIP_FILE_NAME='${env:$GITHUB_ZIP_FILE_NAME}' -t ${env:QUAY_REGISTRY}/${env:QUAY_REPOSITORY}:${env:IMAGE_TAG} ${env:DOCKERFILE_PATH}"
        Invoke-Expression $docker_build_command


    - name: Push To quay.io
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2.7.1
      with:
        image: ${{ inputs.image_name }}
        tags: ${{ inputs.nbs6_version }}
        registry: quay.io/${{secrets.QUAY_ORGANIZATION}}/${{ secrets.QUAY_REPO_BASE_NAME }}
        username: ${{ secrets.USERNAME_NAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}


    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"