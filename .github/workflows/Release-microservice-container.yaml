name: Tag Existing Ansible image in ECR
on:
  workflow_dispatch:
    inputs:
      existing-image-tag:
        description: 'Image tag of existing container in ECR'        
        required: true
        type: string
      additional-image-tag:
        description: 'New image tag to be added to existing image'        
        required: true
        type: string
 
# Microservice name must correspond to an existing ECR          
env:
  microservice_name: ansible
  dockerfile_relative_path: ./ansible
  accountid: ${{secrets.cdc_nbs_sandbox_shared_services_accountid}}

jobs:
  deploy:
    name: Tag container for upper environment
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    # New comment
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Configure Environment Variables
      run: |   
        github_repo_name="$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)"  
        echo "github_repo_name=$github_repo_name" >> $GITHUB_ENV

    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: "arn:aws:iam::${{ env.accountid }}:role/cdc-github-${{ env.github_repo_name }}-dev-role"
        role-session-name: tag-containers
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Add tag to existing ${{ env.microservice_name }} image in Amazon ECR
      id: build-image-develop
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO_BASE_NAME }}/${{ env.microservice_name }}
      run: |
        # Tag existing docker container in ECR 
        MANIFEST=$(aws ecr batch-get-image --repository-name "$ECR_REPOSITORY" --image-ids imageTag="${{inputs.existing-image-tag}}" --output json | jq --raw-output --join-output '.images[0].imageManifest')

        aws ecr put-image --repository-name "$ECR_REPOSITORY" --image-tag "${{inputs.additional-image-tag}}" --image-manifest "$MANIFEST"