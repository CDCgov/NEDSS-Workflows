name: Build and store a microservice container
on:
  workflow_call:
    inputs:
      microservice_name:
        description: "Name of microservice corresponding to a container in ECR."
        required: true
        type: string
      dockerfile_relative_path:
        description: "Relative path to dockerfile being built (use '-f' docker argument if the dockerfile must be while in the root directory')."
        required: true
        type: string
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID:
        description: "Secret named CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID where ECR resides."
        required: true
      ECR_REPO_BASE_NAME:
        description: "Secret named ECR_REPO_BASE_NAME describing the ECR base path name."
        required: true

jobs:
  deploy:
    name: Build and store container
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    # New comment
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Configure Environment Variables
      run: |      
        github_repo_name="$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)"        
        github_tag=${GITHUB_REF#refs/tags/}
        echo "github_tag=$github_tag" >> $GITHUB_ENV
        echo "github_repo_name=$github_repo_name" >> $GITHUB_ENV


    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: "arn:aws:iam::${{ secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID }}:role/cdc-github-${{ env.github_repo_name }}-dev-role"
        role-session-name: deploy-infrastructure
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push ${{ inputs.microservice_name }} image to Amazon ECR for dev
      id: build-image-develop
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO_BASE_NAME }}/${{ inputs.microservice_name }}
        IMAGE_TAG: "${{ env.github_tag }}"
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ${{ inputs.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT